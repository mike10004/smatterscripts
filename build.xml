<?xml version="1.0" encoding="UTF-8"?>
<project name="SmatterScripts" default="build" basedir=".">
    <description>my build file</description>
    <!-- set global properties for this build -->

    <dirname property="project_dir" file="${ant.file}"/>
    <property name="bindir" location="${project_dir}/bin"/>
    <property name="launchers.dir" location="${project_dir}/launchers"/>
    <property name="our_dirname" value="smatterscripts"/>
    <property name="src_dir" value="${project_dir}"/>
    <property name="install_dir" value="${user.home}/.local/bin"/>
    <property name="install.overwrite" value="false"/>
    <property name="python.executable" value="/usr/bin/python3"/>

    <macrodef name="check-main">
        <text name="progname" optional="false"/>
        <attribute name="module" default="@{progname}"/>
        <sequential>
            <exec executable="python3" failonerror="true">
                <env key="PYTHONPATH" value="${src_dir}"/>
                <arg value="-c"/>
                <arg value="from @{module} import main"/>
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="generate-launcher">
        <text name="progname" optional="false"/>
        <attribute name="module" default="@{progname}"/>
        <sequential>
            <check-main module="@{module}">@{progname}</check-main>
            <local name="launcher.path"/>
            <property name="launcher.path" location="${launchers.dir}/@{progname}.py"/>
            <echo file="${launcher.path}" append="false">#!/usr/bin/env python3 ${line.separator}</echo>
            <echo file="${launcher.path}" append="true">from @{module} import main ${line.separator}</echo>
            <echo file="${launcher.path}" append="true">if __name__ == &quot;__main__&quot;: exit(main()) ${line.separator}</echo>
        </sequential>
    </macrodef>

    <macrodef name="generate-executable">
        <text name="progname" optional="false"/>
        <attribute name="module" default="@{progname}"/>
        <sequential>
            <generate-launcher module="@{module}">@{progname}</generate-launcher>
            <chmod perm="0700" file="${launchers.dir}/@{progname}.py"/>
            <local name="launcher.path"/>
            <property name="launcher.path" location="${launchers.dir}/@{progname}.py"/>
            <echo file="${bindir}/@{progname}">#!/bin/bash${line.separator}</echo>
            <echo file="${bindir}/@{progname}" append="true">export PYTHONPATH=${src_dir}${line.separator}</echo>
            <echo file="${bindir}/@{progname}" append="true">exec ${launcher.path} &quot;$@&quot;${line.separator}</echo>
            <chmod perm="0700" file="${bindir}/@{progname}"/>
        </sequential>
    </macrodef>

    <macrodef name="install-script">
        <text name="prog" trim="true" optional="false"/>
        <sequential>
            <symlink link="${install_dir}/@{prog}" resource="${bindir}/@{prog}" overwrite="${install.overwrite}"/>
        </sequential>
    </macrodef>

    <target name="init">
        <mkdir dir="${bindir}"/>
        <mkdir dir="${launchers.dir}"/>
    </target>

    <target name="compile" depends="init" description="generate executable scripts">
        <generate-executable module="calculation.histo">histo</generate-executable>
        <generate-executable module="shelltools.ressample">ressample</generate-executable>
        <generate-executable module="shelltools.csv2sortable">csv2sortable</generate-executable>
    </target>

    <target name="unit-test" description="run tests">
        <exec executable="python3" failonerror="true">
            <arg value="-m"/>
            <arg value="unittest"/>
            <arg value="discover"/>
        </exec>
    </target>

    <target name="build" depends="unit-test,compile" description="compile and test">
    </target>

    <target name="install" depends="build" description="create symlinks to executables">
        <install-script>histo</install-script>
        <install-script>ressample</install-script>
        <install-script>csv2sortable</install-script>
    </target>

    <target name="clean" description="clean up">
        <delete dir="${bindir}"/>
    </target>
</project>
